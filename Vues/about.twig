
<div class="about">

	<h1>À propos de Muffin</h1>
	<p class="about">Muffin est un site destiné aux étudiants de 42 afin d'améliorer les échanges, l'organisation et le partage au sein de la communauté.</p>
	<a class="button" href="https://github.com/WeAreMuffin/Muffin"><span style="color: #000000" class="icon-github"></span> Voir le projet sur GitHub</a>
	<a class="button" href="https://www.facebook.com/wearemuffin"><span style="color: #354C8C" class="icon-facebook4"></span> Suivez nous sur Facebook</a>
	<a class="button" href="https://github.com/wearemuffin/Muffin/issues/new"><span style="color: #C02942" class="icon-bug"></span> Déclarer un bug</a>
	<a class="button" href="mailto:muffin@lambdaweb.fr"><span class="icon-envelop"></span> Nous contacter</a>

	<div class="bretzel-separator"></div>

	<div class="about-contributors"><span class="waiting"></span></div>

	<div class="bretzel-separator"></div>

	<div class="about-project-status">
		<span class="waiting"></span>
	</div>

	</div>


</div>

<script>
	var contributorTemplate = _.template("<a href='<%= html_url %>'><figure class='user'><img src='<%= avatar_url %>' class='rounded'><figcaption>\
		<span class='name'><%= name %></span></figcaption></figure></a>");
	var projectTemplate = _.template("<div class='center'>\
	                                     <div class='tiny-container'><span class='icon-star'></span> <%= stargazers_count %></div>\
	                                     <div class='tiny-container'><span class='icon-eye'></span> <%= watchers_count %></div>\
	                                     <div class='tiny-container'><span class='icon-uniF786'></span> <%= forks_count %></div>\
	                                     <div class='tiny-container'><span class='icon-uniF7BA'></span> <%= default_branch %></div>\
	                                 <div>\
	                                 <div class='left-section'>\
	                                     <h4>Dernières mises à jour</h4> \
	                                     <span class='updates'><span class='icon-uniF008'></span> Développement: <span class='date-calendar'>\
	                                     	<%= updated_at %></span></span>\
	                                     <span class='updates'><span class='icon-speed'></span> Production: <span class='date-calendar'>\
	                                     	<%= release_date %></span></span>\
	                                 </div>\
	                                     <div class='right-section'>\
	                                     	<h4>Accès au git</h4> \
	                                     <div class='form'>\
	                                     <p><span>url</span> : <span class='code'><%= git_url %></span></p></div>\
	                                     </div>");

	// Status
	$.getJSON("https://api.github.com/repos/wearemuffin/Muffin/tags", function(dataT)
	{
		var lastSha = dataT[0].commit.sha;
		$.getJSON("https://api.github.com/repos/wearemuffin/Muffin/commits/" + lastSha, function(dataC)
		{
			$.getJSON("https://api.github.com/repos/wearemuffin/Muffin", function(data)
			{
				data.release_date = dataC.commit.committer.date;
				$(".about-project-status").html(projectTemplate(data));
				moment.lang('fr');
				$(".date-calendar").each(function()
				{
					var ctn = $(this).text();
					$(this).html(moment(ctn).calendar());
				});
			});
		});
	});

	// Contributeurs

	/* en dur, les contrib indirectes */
	var users = ["sanecz"];
	var f = [];

	$.getJSON("https://api.github.com/repos/wearemuffin/Muffin/stats/contributors", function(dataT)
	{
		users = _.union(users, _.map(dataT, function(elt){ return elt.author.login; }));
		var c = $(".about-contributors");
		c.html("");

		$.getJSON("https://api.github.com/repos/wearemuffin/Muffin/issues?state=closed", function(u) //2fix
		{
			users = _.union(users, _.map(u, function(elt){ return elt.user.login; }));

			_.each(users, function(e, ind) { $.getJSON("https://api.github.com/users/" + e, function(k, i)
			{
					if(k.name == undefined)
						k.name = e;
					f.push(k);
					if (ind == (users.length - 1))
					{
						f = _.sortBy(f, function(e){ return (e.name)});
						_.each(f, function(us){c.append(contributorTemplate(us)); });
					}
			});
		}); });
	});
	// $("#issue-submit").click(function()
	// {
	// 	$.ajax({
	// 		type: "GET",
	// 		url: "https://github.com/login/oauth/access_token",
	// 		data:
	// 		{
	// 			client_id: "a83045728aa535209ac5",
	// 			redirect_uri: "http://88.183.177.155/Muffin_devel/#/About/index",
	// 			scope: ["public_repo", "repo", "user"],
	// 			state: "asdfasdfasdf"
	// 		},success: function(e)
	// 		{
	// 			console.log("retour: ", e);
	// 		}
	// 	});

	//     $.ajax({
	// 		type: "POST",
	// 		accept: "application/vnd.github.v3+json",
	// 		url: "https://api.github.com/repos/lambda2/Muffin/issues",
	// 		data:
	// 		{
	// 			title: $("#issue-text").val(),
	// 			body: $("#issue-text").val(),
	// 			"assignee": "octocat",
	// 			"milestone": 1,
	// 			"labels": [
	// 			  "Label1",
	// 			  "Label2"
	// 			]
	// 		},success: function(e)
	// 		{
	// 			console.log("retour: ", e);
	// 		}
	// 	});
	// });

</script>
